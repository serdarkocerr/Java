/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package tr.com.siparis.sistemi.kafka.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Anayemek extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Anayemek\",\"namespace\":\"tr.com.siparis.sistemi.kafka.model\",\"fields\":[{\"name\":\"anayemek\",\"type\":[\"null\",\"string\"]},{\"name\":\"anayemekId\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence anayemek;
  @Deprecated public int anayemekId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Anayemek() {}

  /**
   * All-args constructor.
   */
  public Anayemek(java.lang.CharSequence anayemek, java.lang.Integer anayemekId) {
    this.anayemek = anayemek;
    this.anayemekId = anayemekId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return anayemek;
    case 1: return anayemekId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: anayemek = (java.lang.CharSequence)value$; break;
    case 1: anayemekId = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'anayemek' field.
   */
  public java.lang.CharSequence getAnayemek() {
    return anayemek;
  }

  /**
   * Sets the value of the 'anayemek' field.
   * @param value the value to set.
   */
  public void setAnayemek(java.lang.CharSequence value) {
    this.anayemek = value;
  }

  /**
   * Gets the value of the 'anayemekId' field.
   */
  public java.lang.Integer getAnayemekId() {
    return anayemekId;
  }

  /**
   * Sets the value of the 'anayemekId' field.
   * @param value the value to set.
   */
  public void setAnayemekId(java.lang.Integer value) {
    this.anayemekId = value;
  }

  /** Creates a new Anayemek RecordBuilder */
  public static tr.com.siparis.sistemi.kafka.model.Anayemek.Builder newBuilder() {
    return new tr.com.siparis.sistemi.kafka.model.Anayemek.Builder();
  }
  
  /** Creates a new Anayemek RecordBuilder by copying an existing Builder */
  public static tr.com.siparis.sistemi.kafka.model.Anayemek.Builder newBuilder(tr.com.siparis.sistemi.kafka.model.Anayemek.Builder other) {
    return new tr.com.siparis.sistemi.kafka.model.Anayemek.Builder(other);
  }
  
  /** Creates a new Anayemek RecordBuilder by copying an existing Anayemek instance */
  public static tr.com.siparis.sistemi.kafka.model.Anayemek.Builder newBuilder(tr.com.siparis.sistemi.kafka.model.Anayemek other) {
    return new tr.com.siparis.sistemi.kafka.model.Anayemek.Builder(other);
  }
  
  /**
   * RecordBuilder for Anayemek instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Anayemek>
    implements org.apache.avro.data.RecordBuilder<Anayemek> {

    private java.lang.CharSequence anayemek;
    private int anayemekId;

    /** Creates a new Builder */
    private Builder() {
      super(tr.com.siparis.sistemi.kafka.model.Anayemek.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(tr.com.siparis.sistemi.kafka.model.Anayemek.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.anayemek)) {
        this.anayemek = data().deepCopy(fields()[0].schema(), other.anayemek);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.anayemekId)) {
        this.anayemekId = data().deepCopy(fields()[1].schema(), other.anayemekId);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Anayemek instance */
    private Builder(tr.com.siparis.sistemi.kafka.model.Anayemek other) {
            super(tr.com.siparis.sistemi.kafka.model.Anayemek.SCHEMA$);
      if (isValidValue(fields()[0], other.anayemek)) {
        this.anayemek = data().deepCopy(fields()[0].schema(), other.anayemek);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.anayemekId)) {
        this.anayemekId = data().deepCopy(fields()[1].schema(), other.anayemekId);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'anayemek' field */
    public java.lang.CharSequence getAnayemek() {
      return anayemek;
    }
    
    /** Sets the value of the 'anayemek' field */
    public tr.com.siparis.sistemi.kafka.model.Anayemek.Builder setAnayemek(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.anayemek = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'anayemek' field has been set */
    public boolean hasAnayemek() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'anayemek' field */
    public tr.com.siparis.sistemi.kafka.model.Anayemek.Builder clearAnayemek() {
      anayemek = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'anayemekId' field */
    public java.lang.Integer getAnayemekId() {
      return anayemekId;
    }
    
    /** Sets the value of the 'anayemekId' field */
    public tr.com.siparis.sistemi.kafka.model.Anayemek.Builder setAnayemekId(int value) {
      validate(fields()[1], value);
      this.anayemekId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'anayemekId' field has been set */
    public boolean hasAnayemekId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'anayemekId' field */
    public tr.com.siparis.sistemi.kafka.model.Anayemek.Builder clearAnayemekId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Anayemek build() {
      try {
        Anayemek record = new Anayemek();
        record.anayemek = fieldSetFlags()[0] ? this.anayemek : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.anayemekId = fieldSetFlags()[1] ? this.anayemekId : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
