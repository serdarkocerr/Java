/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package tr.com.siparis.sistemi.kafka.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Tatli extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Tatli\",\"namespace\":\"tr.com.siparis.sistemi.kafka.model\",\"fields\":[{\"name\":\"tatliAdi\",\"type\":[\"null\",\"string\"]},{\"name\":\"tatliId\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence tatliAdi;
  @Deprecated public int tatliId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Tatli() {}

  /**
   * All-args constructor.
   */
  public Tatli(java.lang.CharSequence tatliAdi, java.lang.Integer tatliId) {
    this.tatliAdi = tatliAdi;
    this.tatliId = tatliId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return tatliAdi;
    case 1: return tatliId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: tatliAdi = (java.lang.CharSequence)value$; break;
    case 1: tatliId = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'tatliAdi' field.
   */
  public java.lang.CharSequence getTatliAdi() {
    return tatliAdi;
  }

  /**
   * Sets the value of the 'tatliAdi' field.
   * @param value the value to set.
   */
  public void setTatliAdi(java.lang.CharSequence value) {
    this.tatliAdi = value;
  }

  /**
   * Gets the value of the 'tatliId' field.
   */
  public java.lang.Integer getTatliId() {
    return tatliId;
  }

  /**
   * Sets the value of the 'tatliId' field.
   * @param value the value to set.
   */
  public void setTatliId(java.lang.Integer value) {
    this.tatliId = value;
  }

  /** Creates a new Tatli RecordBuilder */
  public static tr.com.siparis.sistemi.kafka.model.Tatli.Builder newBuilder() {
    return new tr.com.siparis.sistemi.kafka.model.Tatli.Builder();
  }
  
  /** Creates a new Tatli RecordBuilder by copying an existing Builder */
  public static tr.com.siparis.sistemi.kafka.model.Tatli.Builder newBuilder(tr.com.siparis.sistemi.kafka.model.Tatli.Builder other) {
    return new tr.com.siparis.sistemi.kafka.model.Tatli.Builder(other);
  }
  
  /** Creates a new Tatli RecordBuilder by copying an existing Tatli instance */
  public static tr.com.siparis.sistemi.kafka.model.Tatli.Builder newBuilder(tr.com.siparis.sistemi.kafka.model.Tatli other) {
    return new tr.com.siparis.sistemi.kafka.model.Tatli.Builder(other);
  }
  
  /**
   * RecordBuilder for Tatli instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Tatli>
    implements org.apache.avro.data.RecordBuilder<Tatli> {

    private java.lang.CharSequence tatliAdi;
    private int tatliId;

    /** Creates a new Builder */
    private Builder() {
      super(tr.com.siparis.sistemi.kafka.model.Tatli.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(tr.com.siparis.sistemi.kafka.model.Tatli.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.tatliAdi)) {
        this.tatliAdi = data().deepCopy(fields()[0].schema(), other.tatliAdi);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tatliId)) {
        this.tatliId = data().deepCopy(fields()[1].schema(), other.tatliId);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Tatli instance */
    private Builder(tr.com.siparis.sistemi.kafka.model.Tatli other) {
            super(tr.com.siparis.sistemi.kafka.model.Tatli.SCHEMA$);
      if (isValidValue(fields()[0], other.tatliAdi)) {
        this.tatliAdi = data().deepCopy(fields()[0].schema(), other.tatliAdi);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tatliId)) {
        this.tatliId = data().deepCopy(fields()[1].schema(), other.tatliId);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'tatliAdi' field */
    public java.lang.CharSequence getTatliAdi() {
      return tatliAdi;
    }
    
    /** Sets the value of the 'tatliAdi' field */
    public tr.com.siparis.sistemi.kafka.model.Tatli.Builder setTatliAdi(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.tatliAdi = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'tatliAdi' field has been set */
    public boolean hasTatliAdi() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'tatliAdi' field */
    public tr.com.siparis.sistemi.kafka.model.Tatli.Builder clearTatliAdi() {
      tatliAdi = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'tatliId' field */
    public java.lang.Integer getTatliId() {
      return tatliId;
    }
    
    /** Sets the value of the 'tatliId' field */
    public tr.com.siparis.sistemi.kafka.model.Tatli.Builder setTatliId(int value) {
      validate(fields()[1], value);
      this.tatliId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'tatliId' field has been set */
    public boolean hasTatliId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'tatliId' field */
    public tr.com.siparis.sistemi.kafka.model.Tatli.Builder clearTatliId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Tatli build() {
      try {
        Tatli record = new Tatli();
        record.tatliAdi = fieldSetFlags()[0] ? this.tatliAdi : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.tatliId = fieldSetFlags()[1] ? this.tatliId : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
