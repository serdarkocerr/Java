/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package tr.com.siparis.sistemi.kafka.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Salata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Salata\",\"namespace\":\"tr.com.siparis.sistemi.kafka.model\",\"fields\":[{\"name\":\"salataAdi\",\"type\":[\"null\",\"string\"]},{\"name\":\"salataId\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence salataAdi;
  @Deprecated public int salataId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Salata() {}

  /**
   * All-args constructor.
   */
  public Salata(java.lang.CharSequence salataAdi, java.lang.Integer salataId) {
    this.salataAdi = salataAdi;
    this.salataId = salataId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return salataAdi;
    case 1: return salataId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: salataAdi = (java.lang.CharSequence)value$; break;
    case 1: salataId = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'salataAdi' field.
   */
  public java.lang.CharSequence getSalataAdi() {
    return salataAdi;
  }

  /**
   * Sets the value of the 'salataAdi' field.
   * @param value the value to set.
   */
  public void setSalataAdi(java.lang.CharSequence value) {
    this.salataAdi = value;
  }

  /**
   * Gets the value of the 'salataId' field.
   */
  public java.lang.Integer getSalataId() {
    return salataId;
  }

  /**
   * Sets the value of the 'salataId' field.
   * @param value the value to set.
   */
  public void setSalataId(java.lang.Integer value) {
    this.salataId = value;
  }

  /** Creates a new Salata RecordBuilder */
  public static tr.com.siparis.sistemi.kafka.model.Salata.Builder newBuilder() {
    return new tr.com.siparis.sistemi.kafka.model.Salata.Builder();
  }
  
  /** Creates a new Salata RecordBuilder by copying an existing Builder */
  public static tr.com.siparis.sistemi.kafka.model.Salata.Builder newBuilder(tr.com.siparis.sistemi.kafka.model.Salata.Builder other) {
    return new tr.com.siparis.sistemi.kafka.model.Salata.Builder(other);
  }
  
  /** Creates a new Salata RecordBuilder by copying an existing Salata instance */
  public static tr.com.siparis.sistemi.kafka.model.Salata.Builder newBuilder(tr.com.siparis.sistemi.kafka.model.Salata other) {
    return new tr.com.siparis.sistemi.kafka.model.Salata.Builder(other);
  }
  
  /**
   * RecordBuilder for Salata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Salata>
    implements org.apache.avro.data.RecordBuilder<Salata> {

    private java.lang.CharSequence salataAdi;
    private int salataId;

    /** Creates a new Builder */
    private Builder() {
      super(tr.com.siparis.sistemi.kafka.model.Salata.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(tr.com.siparis.sistemi.kafka.model.Salata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.salataAdi)) {
        this.salataAdi = data().deepCopy(fields()[0].schema(), other.salataAdi);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.salataId)) {
        this.salataId = data().deepCopy(fields()[1].schema(), other.salataId);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Salata instance */
    private Builder(tr.com.siparis.sistemi.kafka.model.Salata other) {
            super(tr.com.siparis.sistemi.kafka.model.Salata.SCHEMA$);
      if (isValidValue(fields()[0], other.salataAdi)) {
        this.salataAdi = data().deepCopy(fields()[0].schema(), other.salataAdi);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.salataId)) {
        this.salataId = data().deepCopy(fields()[1].schema(), other.salataId);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'salataAdi' field */
    public java.lang.CharSequence getSalataAdi() {
      return salataAdi;
    }
    
    /** Sets the value of the 'salataAdi' field */
    public tr.com.siparis.sistemi.kafka.model.Salata.Builder setSalataAdi(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.salataAdi = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'salataAdi' field has been set */
    public boolean hasSalataAdi() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'salataAdi' field */
    public tr.com.siparis.sistemi.kafka.model.Salata.Builder clearSalataAdi() {
      salataAdi = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'salataId' field */
    public java.lang.Integer getSalataId() {
      return salataId;
    }
    
    /** Sets the value of the 'salataId' field */
    public tr.com.siparis.sistemi.kafka.model.Salata.Builder setSalataId(int value) {
      validate(fields()[1], value);
      this.salataId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'salataId' field has been set */
    public boolean hasSalataId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'salataId' field */
    public tr.com.siparis.sistemi.kafka.model.Salata.Builder clearSalataId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Salata build() {
      try {
        Salata record = new Salata();
        record.salataAdi = fieldSetFlags()[0] ? this.salataAdi : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.salataId = fieldSetFlags()[1] ? this.salataId : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
