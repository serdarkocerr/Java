/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package tr.com.sakarya.uni.tez.kafka.models;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CRUDUrun extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CRUDUrun\",\"namespace\":\"tr.com.sakarya.uni.tez.kafka.models\",\"fields\":[{\"name\":\"crudType\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"CRUDType\",\"symbols\":[\"CREATE\",\"READ\",\"DELETE\",\"UPDATE\"]}]},{\"name\":\"urun\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Urun\",\"fields\":[{\"name\":\"depo_id\",\"type\":\"int\"},{\"name\":\"marka_id\",\"type\":\"int\"},{\"name\":\"tur_id\",\"type\":\"int\"},{\"name\":\"urun_adi\",\"type\":[\"null\",\"string\"]},{\"name\":\"urun_id\",\"type\":\"int\"}]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public tr.com.sakarya.uni.tez.kafka.models.CRUDType crudType;
  @Deprecated public tr.com.sakarya.uni.tez.kafka.models.Urun urun;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CRUDUrun() {}

  /**
   * All-args constructor.
   */
  public CRUDUrun(tr.com.sakarya.uni.tez.kafka.models.CRUDType crudType, tr.com.sakarya.uni.tez.kafka.models.Urun urun) {
    this.crudType = crudType;
    this.urun = urun;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return crudType;
    case 1: return urun;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: crudType = (tr.com.sakarya.uni.tez.kafka.models.CRUDType)value$; break;
    case 1: urun = (tr.com.sakarya.uni.tez.kafka.models.Urun)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'crudType' field.
   */
  public tr.com.sakarya.uni.tez.kafka.models.CRUDType getCrudType() {
    return crudType;
  }

  /**
   * Sets the value of the 'crudType' field.
   * @param value the value to set.
   */
  public void setCrudType(tr.com.sakarya.uni.tez.kafka.models.CRUDType value) {
    this.crudType = value;
  }

  /**
   * Gets the value of the 'urun' field.
   */
  public tr.com.sakarya.uni.tez.kafka.models.Urun getUrun() {
    return urun;
  }

  /**
   * Sets the value of the 'urun' field.
   * @param value the value to set.
   */
  public void setUrun(tr.com.sakarya.uni.tez.kafka.models.Urun value) {
    this.urun = value;
  }

  /** Creates a new CRUDUrun RecordBuilder */
  public static tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder newBuilder() {
    return new tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder();
  }
  
  /** Creates a new CRUDUrun RecordBuilder by copying an existing Builder */
  public static tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder newBuilder(tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder other) {
    return new tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder(other);
  }
  
  /** Creates a new CRUDUrun RecordBuilder by copying an existing CRUDUrun instance */
  public static tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder newBuilder(tr.com.sakarya.uni.tez.kafka.models.CRUDUrun other) {
    return new tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder(other);
  }
  
  /**
   * RecordBuilder for CRUDUrun instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CRUDUrun>
    implements org.apache.avro.data.RecordBuilder<CRUDUrun> {

    private tr.com.sakarya.uni.tez.kafka.models.CRUDType crudType;
    private tr.com.sakarya.uni.tez.kafka.models.Urun urun;

    /** Creates a new Builder */
    private Builder() {
      super(tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.crudType)) {
        this.crudType = data().deepCopy(fields()[0].schema(), other.crudType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.urun)) {
        this.urun = data().deepCopy(fields()[1].schema(), other.urun);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CRUDUrun instance */
    private Builder(tr.com.sakarya.uni.tez.kafka.models.CRUDUrun other) {
            super(tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.SCHEMA$);
      if (isValidValue(fields()[0], other.crudType)) {
        this.crudType = data().deepCopy(fields()[0].schema(), other.crudType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.urun)) {
        this.urun = data().deepCopy(fields()[1].schema(), other.urun);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'crudType' field */
    public tr.com.sakarya.uni.tez.kafka.models.CRUDType getCrudType() {
      return crudType;
    }
    
    /** Sets the value of the 'crudType' field */
    public tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder setCrudType(tr.com.sakarya.uni.tez.kafka.models.CRUDType value) {
      validate(fields()[0], value);
      this.crudType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'crudType' field has been set */
    public boolean hasCrudType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'crudType' field */
    public tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder clearCrudType() {
      crudType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'urun' field */
    public tr.com.sakarya.uni.tez.kafka.models.Urun getUrun() {
      return urun;
    }
    
    /** Sets the value of the 'urun' field */
    public tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder setUrun(tr.com.sakarya.uni.tez.kafka.models.Urun value) {
      validate(fields()[1], value);
      this.urun = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'urun' field has been set */
    public boolean hasUrun() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'urun' field */
    public tr.com.sakarya.uni.tez.kafka.models.CRUDUrun.Builder clearUrun() {
      urun = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public CRUDUrun build() {
      try {
        CRUDUrun record = new CRUDUrun();
        record.crudType = fieldSetFlags()[0] ? this.crudType : (tr.com.sakarya.uni.tez.kafka.models.CRUDType) defaultValue(fields()[0]);
        record.urun = fieldSetFlags()[1] ? this.urun : (tr.com.sakarya.uni.tez.kafka.models.Urun) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
