/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package tr.com.siparis.sistemi.kafka.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Masa extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Masa\",\"namespace\":\"tr.com.siparis.sistemi.kafka.model\",\"fields\":[{\"name\":\"masaAdi\",\"type\":[\"null\",\"string\"]},{\"name\":\"masaId\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence masaAdi;
  @Deprecated public int masaId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Masa() {}

  /**
   * All-args constructor.
   */
  public Masa(java.lang.CharSequence masaAdi, java.lang.Integer masaId) {
    this.masaAdi = masaAdi;
    this.masaId = masaId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return masaAdi;
    case 1: return masaId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: masaAdi = (java.lang.CharSequence)value$; break;
    case 1: masaId = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'masaAdi' field.
   */
  public java.lang.CharSequence getMasaAdi() {
    return masaAdi;
  }

  /**
   * Sets the value of the 'masaAdi' field.
   * @param value the value to set.
   */
  public void setMasaAdi(java.lang.CharSequence value) {
    this.masaAdi = value;
  }

  /**
   * Gets the value of the 'masaId' field.
   */
  public java.lang.Integer getMasaId() {
    return masaId;
  }

  /**
   * Sets the value of the 'masaId' field.
   * @param value the value to set.
   */
  public void setMasaId(java.lang.Integer value) {
    this.masaId = value;
  }

  /** Creates a new Masa RecordBuilder */
  public static tr.com.siparis.sistemi.kafka.model.Masa.Builder newBuilder() {
    return new tr.com.siparis.sistemi.kafka.model.Masa.Builder();
  }
  
  /** Creates a new Masa RecordBuilder by copying an existing Builder */
  public static tr.com.siparis.sistemi.kafka.model.Masa.Builder newBuilder(tr.com.siparis.sistemi.kafka.model.Masa.Builder other) {
    return new tr.com.siparis.sistemi.kafka.model.Masa.Builder(other);
  }
  
  /** Creates a new Masa RecordBuilder by copying an existing Masa instance */
  public static tr.com.siparis.sistemi.kafka.model.Masa.Builder newBuilder(tr.com.siparis.sistemi.kafka.model.Masa other) {
    return new tr.com.siparis.sistemi.kafka.model.Masa.Builder(other);
  }
  
  /**
   * RecordBuilder for Masa instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Masa>
    implements org.apache.avro.data.RecordBuilder<Masa> {

    private java.lang.CharSequence masaAdi;
    private int masaId;

    /** Creates a new Builder */
    private Builder() {
      super(tr.com.siparis.sistemi.kafka.model.Masa.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(tr.com.siparis.sistemi.kafka.model.Masa.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.masaAdi)) {
        this.masaAdi = data().deepCopy(fields()[0].schema(), other.masaAdi);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.masaId)) {
        this.masaId = data().deepCopy(fields()[1].schema(), other.masaId);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Masa instance */
    private Builder(tr.com.siparis.sistemi.kafka.model.Masa other) {
            super(tr.com.siparis.sistemi.kafka.model.Masa.SCHEMA$);
      if (isValidValue(fields()[0], other.masaAdi)) {
        this.masaAdi = data().deepCopy(fields()[0].schema(), other.masaAdi);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.masaId)) {
        this.masaId = data().deepCopy(fields()[1].schema(), other.masaId);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'masaAdi' field */
    public java.lang.CharSequence getMasaAdi() {
      return masaAdi;
    }
    
    /** Sets the value of the 'masaAdi' field */
    public tr.com.siparis.sistemi.kafka.model.Masa.Builder setMasaAdi(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.masaAdi = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'masaAdi' field has been set */
    public boolean hasMasaAdi() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'masaAdi' field */
    public tr.com.siparis.sistemi.kafka.model.Masa.Builder clearMasaAdi() {
      masaAdi = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'masaId' field */
    public java.lang.Integer getMasaId() {
      return masaId;
    }
    
    /** Sets the value of the 'masaId' field */
    public tr.com.siparis.sistemi.kafka.model.Masa.Builder setMasaId(int value) {
      validate(fields()[1], value);
      this.masaId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'masaId' field has been set */
    public boolean hasMasaId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'masaId' field */
    public tr.com.siparis.sistemi.kafka.model.Masa.Builder clearMasaId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Masa build() {
      try {
        Masa record = new Masa();
        record.masaAdi = fieldSetFlags()[0] ? this.masaAdi : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.masaId = fieldSetFlags()[1] ? this.masaId : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
