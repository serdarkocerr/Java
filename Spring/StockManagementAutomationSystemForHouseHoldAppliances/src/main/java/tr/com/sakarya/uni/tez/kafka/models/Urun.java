/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package tr.com.sakarya.uni.tez.kafka.models;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Urun extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Urun\",\"namespace\":\"tr.com.sakarya.uni.tez.kafka.models\",\"fields\":[{\"name\":\"depo_id\",\"type\":\"int\"},{\"name\":\"marka_id\",\"type\":\"int\"},{\"name\":\"tur_id\",\"type\":\"int\"},{\"name\":\"urun_adi\",\"type\":[\"null\",\"string\"]},{\"name\":\"urun_id\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int depo_id;
  @Deprecated public int marka_id;
  @Deprecated public int tur_id;
  @Deprecated public java.lang.CharSequence urun_adi;
  @Deprecated public int urun_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Urun() {}

  /**
   * All-args constructor.
   */
  public Urun(java.lang.Integer depo_id, java.lang.Integer marka_id, java.lang.Integer tur_id, java.lang.CharSequence urun_adi, java.lang.Integer urun_id) {
    this.depo_id = depo_id;
    this.marka_id = marka_id;
    this.tur_id = tur_id;
    this.urun_adi = urun_adi;
    this.urun_id = urun_id;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return depo_id;
    case 1: return marka_id;
    case 2: return tur_id;
    case 3: return urun_adi;
    case 4: return urun_id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: depo_id = (java.lang.Integer)value$; break;
    case 1: marka_id = (java.lang.Integer)value$; break;
    case 2: tur_id = (java.lang.Integer)value$; break;
    case 3: urun_adi = (java.lang.CharSequence)value$; break;
    case 4: urun_id = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'depo_id' field.
   */
  public java.lang.Integer getDepoId() {
    return depo_id;
  }

  /**
   * Sets the value of the 'depo_id' field.
   * @param value the value to set.
   */
  public void setDepoId(java.lang.Integer value) {
    this.depo_id = value;
  }

  /**
   * Gets the value of the 'marka_id' field.
   */
  public java.lang.Integer getMarkaId() {
    return marka_id;
  }

  /**
   * Sets the value of the 'marka_id' field.
   * @param value the value to set.
   */
  public void setMarkaId(java.lang.Integer value) {
    this.marka_id = value;
  }

  /**
   * Gets the value of the 'tur_id' field.
   */
  public java.lang.Integer getTurId() {
    return tur_id;
  }

  /**
   * Sets the value of the 'tur_id' field.
   * @param value the value to set.
   */
  public void setTurId(java.lang.Integer value) {
    this.tur_id = value;
  }

  /**
   * Gets the value of the 'urun_adi' field.
   */
  public java.lang.CharSequence getUrunAdi() {
    return urun_adi;
  }

  /**
   * Sets the value of the 'urun_adi' field.
   * @param value the value to set.
   */
  public void setUrunAdi(java.lang.CharSequence value) {
    this.urun_adi = value;
  }

  /**
   * Gets the value of the 'urun_id' field.
   */
  public java.lang.Integer getUrunId() {
    return urun_id;
  }

  /**
   * Sets the value of the 'urun_id' field.
   * @param value the value to set.
   */
  public void setUrunId(java.lang.Integer value) {
    this.urun_id = value;
  }

  /** Creates a new Urun RecordBuilder */
  public static tr.com.sakarya.uni.tez.kafka.models.Urun.Builder newBuilder() {
    return new tr.com.sakarya.uni.tez.kafka.models.Urun.Builder();
  }
  
  /** Creates a new Urun RecordBuilder by copying an existing Builder */
  public static tr.com.sakarya.uni.tez.kafka.models.Urun.Builder newBuilder(tr.com.sakarya.uni.tez.kafka.models.Urun.Builder other) {
    return new tr.com.sakarya.uni.tez.kafka.models.Urun.Builder(other);
  }
  
  /** Creates a new Urun RecordBuilder by copying an existing Urun instance */
  public static tr.com.sakarya.uni.tez.kafka.models.Urun.Builder newBuilder(tr.com.sakarya.uni.tez.kafka.models.Urun other) {
    return new tr.com.sakarya.uni.tez.kafka.models.Urun.Builder(other);
  }
  
  /**
   * RecordBuilder for Urun instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Urun>
    implements org.apache.avro.data.RecordBuilder<Urun> {

    private int depo_id;
    private int marka_id;
    private int tur_id;
    private java.lang.CharSequence urun_adi;
    private int urun_id;

    /** Creates a new Builder */
    private Builder() {
      super(tr.com.sakarya.uni.tez.kafka.models.Urun.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(tr.com.sakarya.uni.tez.kafka.models.Urun.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.depo_id)) {
        this.depo_id = data().deepCopy(fields()[0].schema(), other.depo_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.marka_id)) {
        this.marka_id = data().deepCopy(fields()[1].schema(), other.marka_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tur_id)) {
        this.tur_id = data().deepCopy(fields()[2].schema(), other.tur_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.urun_adi)) {
        this.urun_adi = data().deepCopy(fields()[3].schema(), other.urun_adi);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.urun_id)) {
        this.urun_id = data().deepCopy(fields()[4].schema(), other.urun_id);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Urun instance */
    private Builder(tr.com.sakarya.uni.tez.kafka.models.Urun other) {
            super(tr.com.sakarya.uni.tez.kafka.models.Urun.SCHEMA$);
      if (isValidValue(fields()[0], other.depo_id)) {
        this.depo_id = data().deepCopy(fields()[0].schema(), other.depo_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.marka_id)) {
        this.marka_id = data().deepCopy(fields()[1].schema(), other.marka_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tur_id)) {
        this.tur_id = data().deepCopy(fields()[2].schema(), other.tur_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.urun_adi)) {
        this.urun_adi = data().deepCopy(fields()[3].schema(), other.urun_adi);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.urun_id)) {
        this.urun_id = data().deepCopy(fields()[4].schema(), other.urun_id);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'depo_id' field */
    public java.lang.Integer getDepoId() {
      return depo_id;
    }
    
    /** Sets the value of the 'depo_id' field */
    public tr.com.sakarya.uni.tez.kafka.models.Urun.Builder setDepoId(int value) {
      validate(fields()[0], value);
      this.depo_id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'depo_id' field has been set */
    public boolean hasDepoId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'depo_id' field */
    public tr.com.sakarya.uni.tez.kafka.models.Urun.Builder clearDepoId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'marka_id' field */
    public java.lang.Integer getMarkaId() {
      return marka_id;
    }
    
    /** Sets the value of the 'marka_id' field */
    public tr.com.sakarya.uni.tez.kafka.models.Urun.Builder setMarkaId(int value) {
      validate(fields()[1], value);
      this.marka_id = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'marka_id' field has been set */
    public boolean hasMarkaId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'marka_id' field */
    public tr.com.sakarya.uni.tez.kafka.models.Urun.Builder clearMarkaId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'tur_id' field */
    public java.lang.Integer getTurId() {
      return tur_id;
    }
    
    /** Sets the value of the 'tur_id' field */
    public tr.com.sakarya.uni.tez.kafka.models.Urun.Builder setTurId(int value) {
      validate(fields()[2], value);
      this.tur_id = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'tur_id' field has been set */
    public boolean hasTurId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'tur_id' field */
    public tr.com.sakarya.uni.tez.kafka.models.Urun.Builder clearTurId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'urun_adi' field */
    public java.lang.CharSequence getUrunAdi() {
      return urun_adi;
    }
    
    /** Sets the value of the 'urun_adi' field */
    public tr.com.sakarya.uni.tez.kafka.models.Urun.Builder setUrunAdi(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.urun_adi = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'urun_adi' field has been set */
    public boolean hasUrunAdi() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'urun_adi' field */
    public tr.com.sakarya.uni.tez.kafka.models.Urun.Builder clearUrunAdi() {
      urun_adi = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'urun_id' field */
    public java.lang.Integer getUrunId() {
      return urun_id;
    }
    
    /** Sets the value of the 'urun_id' field */
    public tr.com.sakarya.uni.tez.kafka.models.Urun.Builder setUrunId(int value) {
      validate(fields()[4], value);
      this.urun_id = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'urun_id' field has been set */
    public boolean hasUrunId() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'urun_id' field */
    public tr.com.sakarya.uni.tez.kafka.models.Urun.Builder clearUrunId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Urun build() {
      try {
        Urun record = new Urun();
        record.depo_id = fieldSetFlags()[0] ? this.depo_id : (java.lang.Integer) defaultValue(fields()[0]);
        record.marka_id = fieldSetFlags()[1] ? this.marka_id : (java.lang.Integer) defaultValue(fields()[1]);
        record.tur_id = fieldSetFlags()[2] ? this.tur_id : (java.lang.Integer) defaultValue(fields()[2]);
        record.urun_adi = fieldSetFlags()[3] ? this.urun_adi : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.urun_id = fieldSetFlags()[4] ? this.urun_id : (java.lang.Integer) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
