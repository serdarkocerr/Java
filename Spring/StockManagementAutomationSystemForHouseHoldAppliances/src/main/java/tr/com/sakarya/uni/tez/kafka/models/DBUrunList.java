/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package tr.com.sakarya.uni.tez.kafka.models;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DBUrunList extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DBUrunList\",\"namespace\":\"tr.com.sakarya.uni.tez.kafka.models\",\"fields\":[{\"name\":\"urunList\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Urun\",\"fields\":[{\"name\":\"depo_id\",\"type\":\"int\"},{\"name\":\"marka_id\",\"type\":\"int\"},{\"name\":\"tur_id\",\"type\":\"int\"},{\"name\":\"urun_adi\",\"type\":[\"null\",\"string\"]},{\"name\":\"urun_id\",\"type\":\"int\"}]}}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<tr.com.sakarya.uni.tez.kafka.models.Urun> urunList;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DBUrunList() {}

  /**
   * All-args constructor.
   */
  public DBUrunList(java.util.List<tr.com.sakarya.uni.tez.kafka.models.Urun> urunList) {
    this.urunList = urunList;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return urunList;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: urunList = (java.util.List<tr.com.sakarya.uni.tez.kafka.models.Urun>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'urunList' field.
   */
  public java.util.List<tr.com.sakarya.uni.tez.kafka.models.Urun> getUrunList() {
    return urunList;
  }

  /**
   * Sets the value of the 'urunList' field.
   * @param value the value to set.
   */
  public void setUrunList(java.util.List<tr.com.sakarya.uni.tez.kafka.models.Urun> value) {
    this.urunList = value;
  }

  /** Creates a new DBUrunList RecordBuilder */
  public static tr.com.sakarya.uni.tez.kafka.models.DBUrunList.Builder newBuilder() {
    return new tr.com.sakarya.uni.tez.kafka.models.DBUrunList.Builder();
  }
  
  /** Creates a new DBUrunList RecordBuilder by copying an existing Builder */
  public static tr.com.sakarya.uni.tez.kafka.models.DBUrunList.Builder newBuilder(tr.com.sakarya.uni.tez.kafka.models.DBUrunList.Builder other) {
    return new tr.com.sakarya.uni.tez.kafka.models.DBUrunList.Builder(other);
  }
  
  /** Creates a new DBUrunList RecordBuilder by copying an existing DBUrunList instance */
  public static tr.com.sakarya.uni.tez.kafka.models.DBUrunList.Builder newBuilder(tr.com.sakarya.uni.tez.kafka.models.DBUrunList other) {
    return new tr.com.sakarya.uni.tez.kafka.models.DBUrunList.Builder(other);
  }
  
  /**
   * RecordBuilder for DBUrunList instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DBUrunList>
    implements org.apache.avro.data.RecordBuilder<DBUrunList> {

    private java.util.List<tr.com.sakarya.uni.tez.kafka.models.Urun> urunList;

    /** Creates a new Builder */
    private Builder() {
      super(tr.com.sakarya.uni.tez.kafka.models.DBUrunList.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(tr.com.sakarya.uni.tez.kafka.models.DBUrunList.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.urunList)) {
        this.urunList = data().deepCopy(fields()[0].schema(), other.urunList);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DBUrunList instance */
    private Builder(tr.com.sakarya.uni.tez.kafka.models.DBUrunList other) {
            super(tr.com.sakarya.uni.tez.kafka.models.DBUrunList.SCHEMA$);
      if (isValidValue(fields()[0], other.urunList)) {
        this.urunList = data().deepCopy(fields()[0].schema(), other.urunList);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'urunList' field */
    public java.util.List<tr.com.sakarya.uni.tez.kafka.models.Urun> getUrunList() {
      return urunList;
    }
    
    /** Sets the value of the 'urunList' field */
    public tr.com.sakarya.uni.tez.kafka.models.DBUrunList.Builder setUrunList(java.util.List<tr.com.sakarya.uni.tez.kafka.models.Urun> value) {
      validate(fields()[0], value);
      this.urunList = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'urunList' field has been set */
    public boolean hasUrunList() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'urunList' field */
    public tr.com.sakarya.uni.tez.kafka.models.DBUrunList.Builder clearUrunList() {
      urunList = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public DBUrunList build() {
      try {
        DBUrunList record = new DBUrunList();
        record.urunList = fieldSetFlags()[0] ? this.urunList : (java.util.List<tr.com.sakarya.uni.tez.kafka.models.Urun>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
